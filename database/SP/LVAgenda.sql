USE LVAGENDA_CRUD;

DROP VIEW IF EXISTS VIEW_TASK;
CREATE VIEW VIEW_TASK AS
SELECT T.task_id,
T.task_titulo,
T.task_content,
T.task_day,
C.categories_nom,
T.created_at
FROM TASKS T 
INNER JOIN CATEGORIES C ON T.CATEGORIES_ID = C.CATEGORIES_ID;

DROP VIEW IF EXISTS VIEW_CATEGORY;
CREATE VIEW VIEW_CATEGORY AS
SELECT * FROM CATEGORIES;

DROP PROCEDURE IF EXISTS SP_SHOWDEL_CATEGORIA;
DELIMITER $$
CREATE PROCEDURE SP_SHOWDEL_CATEGORIA
(ID INT, TIPO VARCHAR(3))
BEGIN
	IF TIPO='S' THEN
		SELECT * FROM CATEGORIES WHERE CATEGORIES_ID=ID;
	ELSEIF TIPO='D' THEN
		DELETE FROM CATEGORIES WHERE CATEGORIES_ID=ID;
	END IF;
END $$
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_ADDUP_CATEGORIA;
DELIMITER $$
CREATE PROCEDURE SP_ADDUP_CATEGORIA
(ID INT, TITULO VARCHAR(255), TIPO VARCHAR(3))
BEGIN
	IF TIPO='A' THEN
    	INSERT INTO CATEGORIES(CATEGORIES_ID, CATEGORIES_NOM, CREATED_AT) 
        VALUES(NULL, TITULO, NOW());
    ELSEIF TIPO='U' THEN
    	UPDATE CATEGORIES 
        SET 
        CATEGORIES_NOM=TITULO, 
        UPDATED_AT=NOW()
        WHERE CATEGORIES_ID=ID;
	END IF;
END $$
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_SHOWDEL_TASKS;
DELIMITER $$
CREATE PROCEDURE SP_SHOWDEL_TASKS
(ID INT, TIPO VARCHAR(3))
BEGIN
	IF TIPO='S' THEN
		SELECT * FROM VIEW_TASK WHERE TASK_ID = ID;
	ELSEIF TIPO='D' THEN
		DELETE FROM TASKS WHERE TASK_ID=ID;
	END IF;
END $$
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_ADDUP_TASKS;
DELIMITER $$
CREATE PROCEDURE SP_ADDUP_TASKS
(ID INT, TITULO VARCHAR(255), CONTENT VARCHAR(255), TDAY VARCHAR(255), CATEGORIA INT, TIPO VARCHAR(3))
BEGIN
	IF TIPO='A' THEN
    	INSERT INTO TASKS(TASK_ID, TASK_TITULO, TASK_CONTENT, TASK_DAY, CATEGORIES_ID, CREATED_AT) 
        VALUES(NULL, TITULO, CONTENT, TDAY, CATEGORIA, NOW());
    ELSEIF TIPO='U' THEN
    	UPDATE TASKS 
        SET 
        TASK_TITULO=TITULO, 
        TASK_CONTENT=CONTENT, 
        TASK_DAY=TDAY, 
        CATEGORIES_ID=CATEGORIA,
        UPDATED_AT=NOW()
        WHERE TASK_ID=ID;
	END IF;
END $$
DELIMITER ;

 CALL SP_ADDUP_CATEGORIA(0, ?, 'A');
 CALL SP_ADDUP_CATEGORIA(?, ?, 'U');
 CALL SP_SHOWDEL_CATEGORIA(?, 'S');
 CALL SP_SHOWDEL_CATEGORIA(?, 'D');
 CALL SP_ADDUP_TASKS(0, ?, ?, ?, ?, 'A');
 CALL SP_ADDUP_TASKS(?, ?, ?, ?, ?, 'U');
 CALL SP_SHOWDEL_TASKS(?, 'D');
 CALL SP_SHOWDEL_TASKS(?, 'S');
 
 SELECT * FROM VIEW_CATEGORY;
 SELECT * FROM VIEW_TASK;
 
 